name: Accessibility Insights Service CI

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: install dependencies
      run: yarn install --frozen-lockfile
    - name: check code formatting
      run: yarn format-check
    - name: check for copyright headers
      run: yarn copyright-check
    - name: Generate build number
      uses: einaregilsson/build-number@v2 
      with:
        token: ${{secrets.github_token}}
    - name: build
      run: yarn build -- -- --env.version=$BUILD_NUMBER
    - name: run linter
      run: yarn lint
    - name: run unit tests
      run: |
          export NODE_OPTIONS=--max_old_space_size=4096
          yarn test --ci --coverage
    - name: publish unit test results
      uses: actions/upload-artifact@v1
      with:
            name: unit tests
            path: test-results/unit/junit.xml
    - name: publish code coverage
      uses: actions/upload-artifact@v1
      with:
        name: code-coverage-report
        path: test-results/unit/coverage/cobertura-coverage.xml
    - name: Create Staging directory
      run: mkdir -p ../staging
    - name: copy production artifacts to staging
      run: rsync -r -v --include=/{,'job-manager/'{,dist/{,'**'}}} --include=/{,'web-api-scan-job-manager/'{,dist/{,'**'}}} --include=/{,'runner/'{,dist/{,'**'}}} --include=/{,'web-api-scan-runner/'{,dist/{,'**'}}} --include=/{,'scan-request-sender/'{,dist/{,'**'}}} --include=/{,'web-api-scan-request-sender/'{,dist/{,'**'}}} --include=/{,'resource-deployment/'{,dist/{,'**'}}} --include=/{,'web-api/'{,dist/{,'**'}}} --include=/{,'web-workers/'{,dist/{,'**'}}} --exclude='*' packages/ ../staging
    - name: list staging
      run: ls -lart ../staging
    - name: upload production artifacts
      uses: actions/upload-artifact@v1
      with:
        name: build-artifacts
        path: ../staging

  canary-deployment:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: | 
            az account set --subscription ${{ secrets.subscriptionId }}
      - name: Download build artifacts
        uses: actions/download-artifact@v1
        with:
          name: build-artifacts
      - name: Deploy binaries & Update Infra
        run: /bin/bash $GITHUB_WORKSPACE/build-artifacts/resource-deployment/dist/scripts/install-parallel.sh  -r "${{ secrets.resourceGroup }}" -s "${{ secrets.subscriptionId }}" -l "${{ secrets.location }}" -e "${{ secrets.environment }}" -c "${{ secrets.clientId }}" -o "${{ secrets.orgName }}" -p "${{ secrets.publisherEmail }}" -t "${{ secrets.clientSecret }}"
      - name: Restart VM pool nodes
        run: /bin/bash $GITHUB_WORKSPACE/build-artifacts/resource-deployment/dist/scripts/restart-vm-pools.sh -r "${{ secrets.resourceGroup }}" -s "${{ secrets.subscriptionId }}"
        
        
